def versionNumber = System.getenv('versionNumber') != null ? System.getenv('versionNumber') : 'SNAPSHOT'
ext.projectIds = ['group': 'teamcity-dotnet-plugin', 'version': versionNumber, 'artifact': 'dotnet-plugin.zip']

group = projectIds.group
version = projectIds.version

allprojects {
    group = projectIds.group
    version = projectIds.version
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.6

    repositories {
        mavenCentral()
        maven {
            name 'JetBrains Maven Repository'
            url 'http://repository.jetbrains.com/all'
        }
    }

    test.useTestNG()
    jar.version = null
}

project(':plugin-dotnet-agent') {
    dependencies {
        compile project(':plugin-dotnet-common')
        compile 'org.jetbrains.teamcity:agent-api:9.0'
        compile 'org.jetbrains.teamcity.internal:agent:9.0'
        runtime 'javax.servlet:jstl:1.1.2'
        testCompile 'org.testng:testng:6.8'
    }
    
    task distrib(type: Zip, dependsOn: jar) {
        archiveName = projectIds.artifact
    
        from (libsDir) {
            into 'lib'
        }
        
        from (configurations.compile) {
            include 'plugin-dotnet-*.jar'
            into 'lib'
        }
        
        from 'teamcity-plugin.xml'

        into 'dotnet-plugin'
    }
    
    artifacts {
        archives distrib
    }
}

project(':plugin-dotnet-common') {
}

project(':plugin-dotnet-server') {
    dependencies {
        compile project(':plugin-dotnet-common')
        compile 'org.jetbrains.teamcity:server-api:9.0'
        compile 'com.google.code.gson:gson:2.5'
        runtime 'javax.servlet:jstl:1.1.2'
    }
    
    task distrib(type: Zip, dependsOn: [':plugin-dotnet-agent:assemble', jar]) {
        archiveName = projectIds.artifact
    
        from (libsDir) {
            into 'server'
        }
        
        from (configurations.compile) {
            include 'gson-*.jar'
            include 'plugin-dotnet-*.jar'
            into 'server'
        }
        
        from (project(':plugin-dotnet-agent').file('build/distributions')) {
            include projectIds.artifact
            into 'agent'
        }
        
        from ('teamcity-plugin.xml') {
            filter {
                it.replaceAll('@Plugin_Version@', projectIds.version)
            }
        }        
    }
    
    artifacts {
        archives distrib
    }
}