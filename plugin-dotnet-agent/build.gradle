/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'com.github.rodm.teamcity-agent' version "1.0"
  id 'com.ullink.nuget' version '2.18'
}

teamcity {
  version = teamcityVersion
  agent {
    descriptor = project.file('teamcity-plugin.xml')
    files {
      into('tools') {
        from('tools')
      }
    }
  }
}

dependencies {
  compile project(':plugin-dotnet-common')
  compile "org.jetbrains.kotlin:kotlin-stdlib"
  provided "org.jetbrains.teamcity.internal:agent:${teamcityVersion}"
  provided "org.jetbrains.teamcity:common-api:${teamcityVersion}"
  provided 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
  testCompile 'org.testng:testng:7.1.0'
  testCompile 'org.jmock:jmock:2.5.1'  
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'org.jetbrains.kotlin:kotlin-reflect' 
  testCompile 'io.mockk:mockk:1.9.3'
  testImplementation  'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
}

project.tasks.nugetRestore.doFirst {
  println 'Clean .NET integration directories'
  ant.delete(dir: './packages')
  ant.delete(dir: './tools')
}

nugetRestore {
  version = '4.5.0'
  packagesConfigFile = file('./../packages.config')
  packagesDirectory = './packages'
}

project.tasks.nugetRestore.doLast {
  def path = ant.path {
    dirset(dir: './packages', includes: 'TeamCity.Dotnet.Integration.*')
  }

  def nuGetPackageId = path.first().name
  println 'Use .NET integration package: ' + nuGetPackageId

  path = ant.path {
    dirset(dir: './packages', includes: 'TeamCity.Dotnet.Integration.*/build/_common/**')
  }

  def contentPath = path.list().first()

  ant.move(todir: './tools', overwrite: 'true', force: 'true') {
    fileset(dir: contentPath, includes: '**/*')
  }

  path = ant.path {
    fileset(dir: './tools', includes: '**/*')
  }

  path.list().each { println it }
  ant.delete(dir: './packages')
}

agentPlugin.dependsOn(nugetRestore)

agentPlugin.version = null
agentPlugin.baseName = projectIds.artifact