plugins {
  id 'com.github.rodm.teamcity-server' version "0.11"
  id 'com.ullink.nuget' version '2.15'
}

teamcity {
  version = teamcityVersion
  server {
    descriptor = project.file('teamcity-plugin.xml')
    tokens = [Plugin_Version: project.version]

    files {
      into('server') {
        from('./tools')
      }
    }
  }
}

dependencies {
  compile project(':plugin-dotnet-common')
  compile 'com.google.code.gson:gson:2.5'
  compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.5"

  provided 'javax.servlet:jstl:1.1.2'
  provided 'org.jetbrains.teamcity:server-api:2017.2-SNAPSHOT'

  agent project(path: ':plugin-dotnet-agent', configuration: 'plugin')
}

nugetRestore {
  packagesConfigFile = file('./../packages.config')
  packagesDirectory = './packages'
}

task prepareTools(dependsOn: nugetRestore) {
  doLast {
    ant.delete(dir: './tools')

    def path = ant.path {
      fileset(dir: './packages', includes: 'TeamCity.Dotnet.Integration.*/TeamCity.Dotnet.Integration.*.nupkg')
    }

    def nuSpecFile = path.list().first()
    def nuSpecFileName = file(nuSpecFile).name

    println 'Use .NET integration nuSpec file: ' + nuSpecFileName

    nuSpecFileName = nuSpecFileName.replaceAll('.nupkg', '')

    ant.unzip(src: nuSpecFile, dest: './packages', overwrite: 'true') {
      patternset() {
        include(name: 'TeamCity.Dotnet.Integration.nuspec')
      }
    }

    ant.zip(baseDir: './packages', includesfile: 'packages/TeamCity.Dotnet.Integration.nuspec', destfile: './tools/' + nuSpecFileName + '.jar') {
      patternset() {
        include(name: 'TeamCity.Dotnet.Integration.nuspec')
      }
    }

    ant.delete(dir: './packages')
  }
}

build.dependsOn(prepareTools)

serverPlugin.version = null
serverPlugin.baseName = projectIds.artifact

sourceCompatibility = 1.7
targetCompatibility = 1.7